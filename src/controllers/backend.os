#Использовать json
#Использовать fs

Перем КаталогПубликации;
Перем ПарсерJSON;
Перем ФорматОтвета;
Перем Лог;

Функция Push() Экспорт
	
	Лог = ОбщегоНазначения.ПолучитьЛог();

	ТокенАвторизации = ЗапросHttp.Заголовки.Получить("OAUTH-TOKEN");
	ИмяФайла = ЗапросHttp.Заголовки.Получить("FILE-NAME");
	Канал = ЗапросHttp.Заголовки.Получить("CHANNEL");
	ДанныеФайла = ОбщегоНазначения.ДвоичныеДанныеИзHTTPЗапроса(ЗапросHttp);
	
	КаталогПубликации = ОбъединитьПути(КаталогПубликации, ?(ЭтоРелизныйКанал(Канал), "download", "dev-channel"));
	
	Попытка		
		ОбщегоНазначения.ПроверитьКорректностьФайла(ИмяФайла);
		ОписаниеПакета = ОбщегоНазначения.ОписаниеПакета(ИмяФайла);
		АвторизованныйПользователь = ОбщегоНазначения.ИмяПользователяПоТокенуАвторизации(ТокенАвторизации);
		ОбщегоНазначения.ПроверитьПравоОтправкиВРепозиторий(АвторизованныйПользователь, ОписаниеПакета.Идентификатор);		
	Исключение		
		Возврат ВернутьОтвет(
			ОбщегоНазначения.ВычислитьКодОшибки(ИнформацияОбОшибке()), 
			"Ошибка: " + ИнформацияОбОшибке().Описание);
	КонецПопытки;
	
	Попытка
		ОбщегоНазначения.ЗафиксироватьПакет(КаталогПубликации, ДанныеФайла, ИмяФайла, ОписаниеПакета.Идентификатор);
	Исключение
		Возврат ВернутьОтвет(
			ОбщегоНазначения.ВычислитьКодОшибки(ИнформацияОбОшибке()), 
			"Сохранение пакета: " + ИнформацияОбОшибке().Описание);
	КонецПопытки;

	УведомитьОРелизе(ОписаниеПакета.Идентификатор,
		 ОписаниеПакета.Версия,
		"https://hub.oscript.io/package/" + ОписаниеПакета.Идентификатор);
	
	Сообщение = "Push accept";
	Возврат ВернутьОтвет(200, Сообщение);
	
КонецФункции

Функция ВернутьОтвет(КодСостояния, Текст)
	
	ЭтоJSON = ФорматОтвета = "json"; 
	ТипКонтента = ?(ЭтоJSON, "application/json", "text/html");

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-type", ТипКонтента);
	Заголовки.Вставить("charset", "utf-8");
	ОтветHttp.УстановитьЗаголовки(Заголовки);
	ОтветHttp.КодСостояния = КодСостояния;
	
	Если ЭтоJSON Тогда
		ОбъектJSON = Новый ПарсерJSON();
		Ответ = Новый Структура;
		Ответ.Вставить("КодСостояние", КодСостояния);
		Ответ.Вставить("Сообщение", Текст);
		Контент = ОбъектJSON.ЗаписатьJSON(Ответ);
	Иначе
		Контент = "<html><head><title>All OK</title></head><body>" + Текст + "</body></html>";
	КонецЕсли;
	
	Возврат Содержимое(Контент, КодировкаТекста.UTF8);
	
КонецФункции

Функция ЭтоРелизныйКанал(Значение)
	Возврат НРег(Значение) = "stable";
КонецФункции

Процедура УведомитьОРелизе(Знач ИмяПакета, Знач Версия, Знач Адрес)
	
	Текст = СтрШаблон("Опубликована версия пакета [%1 %2](%3).
	|Обновить пакет можно командой `opm update %1`",
		ИмяПакета,
		Версия,
		Адрес);

	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-type", "text/plain");
	Запрос = Новый HTTPЗапрос("/", Заголовки);

	Запрос.УстановитьТелоИзСтроки(Текст, КодировкаТекста.UTF8NoBom);
	Попытка
		Соединение = Новый HTTPСоединение("http://tg_bot", 5000, , , , 15);
		Ответ = Соединение.ОтправитьДляОбработки(Запрос);
		Если Ответ.КодСостояния <> 200 Тогда
			Лог.Ошибка("Получен код ошибки: %1 - %2", Ответ.КодСостояния, Ответ.ПолучитьТелоКакСтроку());
		КонецЕсли;
	Исключение
		Лог.Ошибка(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

КонецПроцедуры

ПарсерJSON = Новый ПарсерJSON;
КаталогПубликации = ОбщегоНазначения.КаталогПубликации();
ФорматОтвета = "json"; // xml

